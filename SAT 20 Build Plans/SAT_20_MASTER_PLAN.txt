
SAT 20 — MASTER PROJECT PLAN
=============================

PROJECT NAME:
SAT 20 — 4D Action Framework from First Principles

OBJECTIVE:
Construct a critic-hardened, minimal-assumption 4D action-based theoretical framework with strict logical rigor and falsifiability from the ground up.

--------------------------------------------------
KEY STRATEGIES:
--------------------------------------------------

1. MEMORY & PERSONALIZATION
----------------------------
- Memory: OFF (no saved memories, no past conversation memory).
- Personalization Fields:
  - Name: Nathan McKnight, SAT 20 PI & Logic-Demander
  - What You Do: Formal, critic-driven theoretical physics research.
  - How ChatGPT Should Respond:
    Strict logical rigor, minimal assumptions, critic-mode ON, allow creative ideation but translate to formal rigor, rein in informal expressions.
  - Other Things ChatGPT Should Know:
    Encourage creative exploration, but finalize only rigorously critic-hardened structures.

2. PROJECT FILES (INITIAL UPLOAD)
----------------------------------
Upload at Initialization:
- SAT_2_CORE_BUILD_INSTRUCTIONS.txt
- CHATGPT_BEHAVIOR_SPECIFICATION.txt
- README_PROJECT_MANIFEST.txt
- SAT_INPUT_UTILIZATION_PLAN.txt
- SAT_MEMORY_POLICY_DOCUMENT.txt
- SAT_GLOSSARY_ADDENDUM.txt
- SAT_GLOSSARY_MODEL_INDEX_TEMPLATE.txt

3. CHAT INTERFACE USAGE
------------------------
- Use Chat uploads for:
  - Updated Glossary at major stage completions.
  - Phase-specific instructions as project progresses.
- Use Direct Prompts at each session start:
  "Reminder: SAT 20 Core Build Protocol. Critic Mode ON. Minimal assumptions. Explicit justification required."

4. MODES & MODELS STRATEGY
---------------------------
- Core Modes (max 5-7):
  - Critic (GPT-4 Turbo)
  - MathProof (GPT-4 Turbo)
  - Ontology (GPT-4o)
  - Visualization (GPT-4o)
  - Creative Ideation (GPT-4o)
- Mode Switch Protocol:
  - Explicitly announce mode switch with new prompt.
  - Reset mode identity every 100 messages or major phase switch.
- Model Assignment:
  - Map each mode to optimal GPT model (Turbo/o).
  - Track current model/mode at session start.

5. DOCUMENT MANAGEMENT
------------------------
- Glossary & Model Index:
  - Populate immediately upon introducing new structures.
  - Maintain one-symbol, one-meaning rule.
  - Recap live definitions at start of each major session.
  - Upload updated Glossary via chat during sessions; version it in Project Files at milestones.
- File Output Preferences:
  - Default: Inline code windows for text artifacts.
  - Only use downloadables for large plots or complex LaTeX.

6. PYTHON GEOMETRY STRATEGY
----------------------------
- Use Python to hard-code geometric structures.
- Keep parameterized definitions: (e.g., Helix, time-normal, surface sheets).
- Reference geometric structures verbally during reasoning.
- Prefer inline plotting for visualization.

7. SESSION CONTROL
-------------------
- Session Start Routine:
  - Confirm Memory OFF.
  - Paste Direct Prompt.
  - Note current Mode and Model.
  - Recap active Glossary definitions.

8. VERSIONING
-------------
- Version documents at each major milestone:
  - Glossary: SAT_GLOSSARY_MODEL_INDEX_v1.txt, v2.txt, etc.
  - Stage Logs: e.g., MASS_INTRODUCTION_LOG_v1.txt

9. GENERAL RULES
-----------------
- Minimal structure introduction — only if forced by physical necessity.
- Explicit listing and comparison of candidate structures.
- Delay commitment if multiple viable structures exist.
- Always define falsifiability criteria.
- Maintain Critic Mode rigor throughout.

--------------------------------------------------
GOAL:
Complete 4D action theory with full critic-proof documentation, minimal assumptions, and complete derivation trail.

