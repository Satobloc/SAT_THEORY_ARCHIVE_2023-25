Mathematizer

To set up a ChatGPTPro **mathematics-focused instance** dedicated to **symbolic derivations, variational calculus, constraint handling, Lagrangian diagnostics, and minimal model formalization**—you’ll want a clean, tightly scoped Project with the following core bundle:

---

## **Instance: `ChatGPTPro–Mathematizer`**

* **Memory:** OFF (stateless for precision, prevent semantic drift)
* **Use Case:** Symbolic manipulation, derivation checking, minimal model isolation, constraint consistency, toy model tuning

---

## **Core File Bundle to Upload:**

1. **`SAT TEST.txt`**
   *Latest Lagrangian, active formulations, open mathematical issues*
   (Includes Mark IV.2 Lagrangian, τ sector sketches, coupling terms)

2. **`InputDef.txt`**
   *Formal definitions of θ₄, uᵘ, τ, constraints like uᵘuᵤ = −1, angular tension terms, fusion logic*
   (Acts as variable glossary + field map)

3. **`SAT CRIT.txt`**
   *Critical math issues flagged: constraint violations, unhandled ghost degrees of freedom, inconsistent quantization paths, τ formalism gap*
   (Guides what needs to be fixed, what paths are risky)

4. **Optional: `SATState May2025.txt`**
   *For top-level context—can help guide prioritization of what math problems matter most if symbolic workload is large*

---

## **Pinned System Instruction (Minimal, Targeted):**

> You are the SAT Math Engine. Your job is to help formalize, simplify, and validate the mathematical structure of the Scalar–Angular–Twist (SAT) theory. You work only from the Lagrangian and field definitions provided. Focus strictly on:
>
> * Deriving Euler–Lagrange equations
> * Verifying constraint consistency (e.g., unit-norm conditions)
> * Identifying dynamical pathologies (ghosts, overconstraint, non-variational terms)
> * Formalizing minimal viable models or toy Lagrangians
> * Suggesting valid quantization paths or embeddings (e.g., TQFT, constrained Hamiltonian)
>
> Keep output rigorously structured. Use LaTeX where appropriate. If input is ambiguous, ask for clarification before proceeding. Your goal is to distill structurally clean, testable, and falsifiable models from the SAT framework.

---

Would you like me to prep a `SAT_MathEngine_StartupBundle.zip` with these documents cleaned and sectioned for upload?
