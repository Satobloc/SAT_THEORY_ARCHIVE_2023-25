import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import matplotlib.animation as animation

def make_ring(radius, offset, plane='xy', n_points=200):
    theta = np.linspace(0, 2 * np.pi, n_points)
    if plane == 'xy':
        x = radius * np.cos(theta) + offset[0]
        y = radius * np.sin(theta) + offset[1]
        z = np.zeros_like(theta) + offset[2]
    elif plane == 'yz':
        x = np.zeros_like(theta) + offset[0]
        y = radius * np.cos(theta) + offset[1]
        z = radius * np.sin(theta) + offset[2]
    return x, y, z

# Setup figure
fig = plt.figure(figsize=(10, 8))
ax = fig.add_subplot(111, projection='3d')

# Make 2 Hopf linked rings
x1, y1, z1 = make_ring(1, (1, 0, 0), plane='xy')
x2, y2, z2 = make_ring(1, (0, 1, 0), plane='yz')

line1, = ax.plot([], [], [], lw=2, color='red', label='Filament 1')
line2, = ax.plot([], [], [], lw=2, color='blue', label='Filament 2')

def init():
    ax.set_xlim(-2, 2)
    ax.set_ylim(-2, 2)
    ax.set_zlim(-2, 2)
    ax.set_xlabel('X')
    ax.set_ylabel('Y')
    ax.set_zlabel('Z')
    ax.set_title('Stable Hopf Link (2-Filament Meson)')
    ax.legend()
    return line1, line2

def animate(i):
    angle = i * 2 * np.pi / 100
    # Rotate around Z axis
    line1.set_data(x1 * np.cos(angle) - y1 * np.sin(angle),
                   x1 * np.sin(angle) + y1 * np.cos(angle))
    line1.set_3d_properties(z1)
    
    line2.set_data(x2 * np.cos(angle) - y2 * np.sin(angle),
                   x2 * np.sin(angle) + y2 * np.cos(angle))
    line2.set_3d_properties(z2)
    
    return line1, line2

ani = animation.FuncAnimation(fig, animate, frames=100, init_func=init,
                              blit=True, interval=100, repeat=False)

plt.close(fig)

from IPython.display import HTML
HTML(ani.to_jshtml())
