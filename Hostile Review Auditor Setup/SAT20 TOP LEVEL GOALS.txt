SAT 20 ‚Äî Guiding Principles, Goals, and Strategies
üß© Guiding Principles
Minimal Assumptions
Begin from the fewest possible assumptions: no metric, no gauge structures, no prior dynamics ‚Äî just a differentiable 4D manifold and a particle worldline.
Necessity-Driven Structure
New mathematical structures (e.g., connections, metrics, gauge fields) are introduced only when demanded by the physical behavior to be modeled.
Multiple Interpretation Enumeration
When a new phenomenon (like mass, charge, or spin) is introduced:
List all minimally sufficient structures that could model it.
Delay commitment to a particular structure unless necessary.
Investigate forks only when the next stage can select the best fit.
Critic-Mode Enforcement
At every stage, rigorously test:
Are assumptions explicit and minimal?
Are there hidden tunings?
Are emergent symmetries truly emergent?
Is each new structure unavoidable?
No Arbitrary Constants
Physical constants (e.g., ‚Ñè, c, e, G) must emerge from geometry or topology ‚Äî they cannot be manually inserted.
Falsifiability
At each stage, identify clear experimental or logical falsifiability conditions ‚Äî how can the model be tested or invalidated?
No Pre-loaded Metaphysics
No assumptions about "objective now", causality, or space-time structure unless derived dynamically. Philosophical neutrality is required.
Strict Documentation
Every new structure, assumption, or decision must be explicitly logged:
The physical requirement.
Candidate structures.
Reasoning for selection or deferral.
Critic assessment at each decision point.
üéØ High-Level Goals
Build a Fully Emergent 4D Action
Develop a critic-hardened 4D action that models particle dynamics and field interactions from first principles.
Derive Physical Constants
All constants must emerge from the field content and geometric/topological features of the constructed space.
Achieve Critic-Proof Logical Closure
No circular dependencies (e.g., defining connections without a metric) and no hidden parameters.
Lay Out Explicit Empirical Predictions
At completion, the model should provide a roadmap to empirical predictions and falsifiability tests.
üõ†Ô∏è Core Strategies
Stage Strategy
Stage 0 Define the worldline on a bare differentiable manifold (no metric, no gauge fields).
Stage 1 Model free motion ‚Äî minimally consider connections, metric, or conformal structure.
Stage 2 Model mass ‚Äî norm on velocity (metric?) or volume element approach ‚Äî fork if needed.
Stage 3 Introduce charge ‚Äî minimal U(1) gauge field or fiber bundles ‚Äî defer non-Abelian unless forced.
Stage 4 Model spin ‚Äî consider frame bundles, torsion ‚Äî forked paths documented.
Stage 5 Define dynamics via an action ‚Äî standard or pre-metric formulations considered.
Stage 6 Derive constants ‚Äî no manual insertions, must arise structurally or topologically.
At each stage:
Enumerate candidate structures.
Justify selection rigorously.
Delay structural commitments unless forced.
üß† Critical Behavior Controls
Account Personalization: Define logical rigor, critic-mode skepticism, minimal assumptions.
Project Instructions: Insert condensed Core Build + Behavior Specs.
Project Files: Upload full Core Build Instructions, Behavior Spec, Input Utilization Plan.
Direct Prompts: Reminder at every chat start to enforce SAT 20 Protocol.
Uploaded Documents/Links: Used for external knowledge, not behavioral control.
Memory OFF ‚Äî ensures session purity unless explicitly tied to the project.
üìù Document Setup Summary
Document Purpose
SAT_2_CORE_BUILD_INSTRUCTIONS.txt Detailed build instructions ‚Äî step-by-step theory construction.
CHATGPT_BEHAVIOR_SPECIFICATION.txt Behavioral controls ‚Äî how ChatGPT must operate under critic-mode.
README_PROJECT_MANIFEST.txt Executive-level overview ‚Äî project purpose, scope, strategy, deliverables.
SAT_INPUT_UTILIZATION_PLAN.txt How to use all ChatGPT input routes ‚Äî personalization, prompts, uploads, etc.
‚ö° Final Checks
No assumptions unless demanded.
Every constant must be emergent or explained.
Critic Mode active at every stage.
Explicit logical documentation.
Minimalist, falsifiable, critic-proof construction.
