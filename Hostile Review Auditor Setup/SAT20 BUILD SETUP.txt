SAT 20 Project Setup and Configuration
To ensure a robust, critic-hardened, and minimally-assumed theoretical build for SAT 20, the project setup leverages all available ChatGPT input pathways in a layered and reinforcing manner [1-3]. This comprehensive plan dictates what content to include where for optimal control and rigorous adherence to the project's foundational principles.
Here is a comprehensive breakdown of the content to include in each part of the build setup:
1. Top-Level Account Personalization
These settings provide persistent background bias for ChatGPT's overall behavior, influencing all sessions and projects [4-6]. They act as the "first layer" of behavior control [5].
•
Name: Set to reinforce your role as the project's rigorous overseer [7, 8].
◦
Recommended Content: "Nathan McKnight, SAT 20 PI & Logic-Demander" or "Dr. Nathan McKnight — Principal Investigator, SAT 20 Critic-Hardness Project" [8].
•
What you do: Defines your core research focus and methodology [6, 9].
◦
Recommended Content: "I conduct formal, critic-driven theoretical physics research." or "I conduct fundamental research in mathematical physics, focusing on rigorous, critic-hardened theory construction with minimal assumptions." [6, 9].
•
How ChatGPT should respond: Sets the tone and strictness for all interactions [6, 9].
◦
Recommended Content: "Respond with strict logical rigor. Minimal assumptions. Critic-Mode active at all times. Explicitly state all assumptions and derivations. No metaphysical overreach. Prioritize minimality and falsifiability." [6]. Additionally, it should balance creative exploration with rigor: "Decide when to allow a little looseness for creativity and when to demand tight rigor. Encourage creative exploration but ensure all finalized outputs are rigorously critic-hardened and logically consistent. Allow flexibility for ideation; demand rigor for final structures." [10, 11].
•
Other things ChatGPT should know: Provides additional context and behavioral nuances [5, 11].
◦
Recommended Content: "All outputs must survive hostile critical review. I prefer formal step-by-step derivations. Summarize assumptions at each stage. Always identify potential falsifiability routes. Minimize reification. I sometimes express ideas informally or incompletely. ChatGPT should balance encouraging creative exploration with ensuring all finalized outputs are rigorously critic-hardened and logically consistent." [5, 11].
•
Memory Settings: Crucial for critic-proofing the project [2, 12, 13].
◦
Recommended Content: Keep Memory OFF [2, 6, 12, 13]. Topics to remember should be left blank [6].
2. Project Instructions
These instructions are loaded at the start of a project chat and serve as the persistent foundation for the specific SAT 20 project [12, 14]. They behave like a local override layer, setting expectations for all sessions within that project [14].
•
Purpose: To provide a condensed version of the core build instructions and ChatGPT behavior specifications, reinforcing key directives [12].
•
Content (Text to paste into the Project Instructions field):
◦
"You are tasked with developing a 4D action-based physical framework from minimal first principles. You must follow strict protocols: [15] 1. Begin with a differentiable 4D manifold M. No pre-defined metric, connection, or gauge fields. [15] 2. Start with a worldline γ: R → M, parameterized by λ, with velocity vector v^μ(λ) = dx^μ/dλ. [15] 3. Introduce new mathematical structures and physical properties only when physically necessitated by the desired behavior (e.g., motion, collision, charge). [15] 4. At every new physical requirement, identify all plausible minimal geometric or topological structures that could model the behavior. [15] 5. Explicitly list and compare these candidate structures. Delay commitment to a particular structure unless forced by consistency with existing structures or future physical requirements. [15-17] 6. Continuously operate under Critic Mode: [15, 17] * Assumptions must be minimal and explicit. [15, 17, 18] * No hidden tunable parameters allowed; all constants must emerge from structural or topological features. [15, 18] * Symmetries and structures must be emergent and justified, not assumed a priori. [15, 17, 18] * Each addition must be logically necessary. [15, 18] * Raise warnings if unnecessary complexity or unjustified assumptions are introduced. [17] 7. Explicitly document: The physical requirement, candidate structures, selection reasoning, and Critic assessments. [17, 19] 8. No metaphysical commitments unless strictly necessitated by the formalism. [19, 20] 9. At each stage, define falsifiability criteria for the structures introduced. [19, 21] * Ultimate goal: A complete, critic-hardened 4D action theory with a fully documented logical path and no unjustified structures or hidden parameters. [19]"
3. Project Files (Uploads)
These files serve as persistent, referenceable source documents for the project, providing the detailed procedural blueprints, behavioral controls, and project overview [14, 22, 23]. They are crucial for maintaining consistent behavior and direction across all sessions [24].
•
Files to Upload at Initialization (to Project Files folder):
◦
SAT_2_CORE_BUILD_INSTRUCTIONS.txt: Contains the step-by-step procedural blueprint for theory construction [16, 18, 23, 25-27].
◦
CHATGPT_BEHAVIOR_SPECIFICATION.txt: Defines ChatGPT's behavior rules (minimalism, Critic Mode, explicit justification) [17, 20, 23, 26-28].
◦
README_PROJECT_MANIFEST.txt: An executive-level project summary, including purpose, goals, constraints, deliverables, and success criteria [21, 23, 26, 27, 29-32].
◦
SAT_INPUT_UTILIZATION_PLAN.txt: A detailed plan for how to optimally leverage ChatGPT’s various input routes [1, 12, 22, 26, 33-39]. This document is also updated to include memory verification instructions [40].
◦
SAT_MEMORY_POLICY_DOCUMENT.txt: A formal document outlining the "Memory OFF" policy to prevent hidden memory accumulation, crucial for critic-proofing [13, 38, 41].
◦
SAT_GLOSSARY_ADDENDUM.txt: A formal project policy mandating the use of a formal Glossary and Model Index, enforcing "One Symbol, One Meaning" and version control [42-44]. This is a permanent behavioral constraint on the project [44].
◦
SAT_GLOSSARY_MODEL_INDEX_TEMPLATE.txt: A blank, formal template for the Glossary and Model Index that you will populate as structures emerge [43-48].
•
Files to Upload Dynamically (via Chat interface):
◦
Updated versions of SAT_GLOSSARY_MODEL_INDEX_TEMPLATE.txt: Upload updated versions periodically via Chat whenever a major new structure or term is defined, particularly at the beginning of sessions where those terms will be used [44, 49].
◦
Derivation Logs (e.g., FREE_MOTION_DECISION_LOG.txt, MASS_INTRODUCTION_DECISION_TREE.txt): Uploaded after completing candidate structure enumeration, resolving mass introduction, or other major derivations [50, 51].
◦
Interim Reports/Decision Trees: Capturing choices made between multiple minimal structures [22, 50, 51].
◦
External Papers, Articles, References: Uploaded as supplementary knowledge base when needed for specific stages [34, 52].
•
Files to Upload as Versioned Snapshots (to Project Files at milestones):
◦
SAT_GLOSSARY_MODEL_INDEX_vX.txt: After finishing a major stage, re-upload the updated Glossary to Project Files as a versioned snapshot (e.g., SAT_GLOSSARY_MODEL_INDEX_v1.txt, v2.txt, etc.) [53].
4. Direct Prompts (In-Session Instructions)
These are used for immediate, session-specific behavior refinement and are the strongest local behavioral influence [33, 54]. They reassert core directives at the start of every chat session.
•
Purpose: To refresh ChatGPT's behavior and enforce phase-specific rigor [2, 33].
•
Content (Text to paste at the start of each new chat session):
◦
"Reminder: You are operating under SAT 20 Core Build Protocol. Minimal assumptions only. Critic Mode ON. Explicit justification required for every new structure. No constants or parameters unless structurally derived. Document all assumptions, candidate structures, and decisions at each stage." [55].
5. Uploaded Docs/Links in Chat
These serve primarily as a supplementary knowledge base and reference material relevant to the active session [33, 34]. They are ephemeral, not stored after the session unless re-uploaded [4].
•
Purpose: To provide context-specific external information [34].
•
Content: External papers, articles, or reference materials relevant to specific stages [34, 52].
•
Usage: Always instruct ChatGPT explicitly on how to use these documents (e.g., "Use this document as reference for verifying the emergent gauge structures," or "Do not assume this paper's framework — critique and compare with SAT 20 structures") [34]. Do NOT use them for behavioral control [35, 56].
By meticulously structuring content across these input routes, the SAT 20 project ensures continuous adherence to its core principles of critic-hardening, minimal assumptions, explicit justification, and logical consistency throughout the theory-building process [2, 3, 57-59].